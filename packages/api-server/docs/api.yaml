swagger: "2.0"
info:
  version: 8.8.0
  title: "@fastify/swagger"
definitions: {}
paths:
  /v1/heartbeat/:
    get:
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              version:
                type: string
              name:
                type: string
              online:
                type: boolean
            required:
              - version
              - name
              - online
  /v1/sessions/:
    post:
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              usernameOrEmail:
                type: string
              password:
                type: string
            required:
              - usernameOrEmail
              - password
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              userId:
                type: string
              sessionId:
                type: string
            required:
              - userId
              - sessionId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                userId:
                  type: string
                userAgent:
                  type: string
                loginIP:
                  type: string
              required:
                - id
                - userId
                - userAgent
                - loginIP
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  /v1/current-session/:
    get:
      responses:
        "200":
          description: Default Response
          schema:
            anyOf:
              - type: object
                properties:
                  session:
                    type: object
                    properties:
                      userId:
                        type: string
                      sessionId:
                        type: string
                    required:
                      - userId
                      - sessionId
                  profile:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          name:
                            type: string
                          email:
                            type: string
                          username:
                            type: string
                          year:
                            type: number
                          school:
                            type: string
                          country:
                            type: string
                          region:
                            type: string
                          role:
                            anyOf:
                              - type: string
                                enum:
                                  - User
                              - type: string
                                enum:
                                  - Admin
                              - type: string
                                enum:
                                  - Judger
                          id:
                            type: string
                          newEmail:
                            type: string
                          scopes:
                            type: object
                            additionalProperties:
                              type: string
                          teams:
                            type: object
                            additionalProperties:
                              type: string
                        required:
                          - name
                          - username
                          - year
                          - school
                          - country
                          - region
                          - role
                          - id
                          - scopes
                          - teams
                      - type: object
                        properties:
                          gravatar:
                            type: string
                required:
                  - session
                  - profile
              - type: "null"
    delete:
      responses:
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  /v1/users/:
    post:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                maxLength: 32
                type: string
              email:
                maxLength: 32
                format: email
                type: string
              password:
                maxLength: 32
                minLength: 8
                type: string
              username:
                maxLength: 32
                pattern: ^[A-Za-z0-9_]*$
                type: string
              year:
                maximum: 2100
                minimum: 1900
                type: number
              school:
                maxLength: 48
                type: string
              country:
                maxLength: 32
                type: string
              region:
                maxLength: 32
                type: string
            required:
              - name
              - email
              - password
              - username
              - year
              - school
              - country
              - region
      responses:
        "201":
          description: Default Response
          schema:
            type: object
            properties:
              userId:
                type: string
            required:
              - userId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "409":
          description: Error returned when the requested resource already exists.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource already exists.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 409
                example: 409
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Conflict
                example: Conflict
              message:
                type: string
                description: The error message
                pattern: .+
                example: Conflict.
              code:
                type: string
                description: The error code
                enum:
                  - Conflict
                example: Conflict
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: query
          name: query
        - type: string
          required: false
          in: query
          name: noteam
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              allOf:
                - type: object
                  properties:
                    name:
                      type: string
                    username:
                      type: string
                    id:
                      type: string
                  required:
                    - name
                    - username
                    - id
                - type: object
                  properties:
                    gravatar:
                      type: string
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/users/{userId}/profiles/public":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: userId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            allOf:
              - type: object
                properties:
                  name:
                    type: string
                  username:
                    type: string
                  id:
                    type: string
                required:
                  - name
                  - username
                  - id
              - type: object
                properties:
                  gravatar:
                    type: string
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/users/{userId}/profiles/private":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: userId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            allOf:
              - type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  username:
                    type: string
                  year:
                    type: number
                  school:
                    type: string
                  country:
                    type: string
                  region:
                    type: string
                  role:
                    anyOf:
                      - type: string
                        enum:
                          - User
                      - type: string
                        enum:
                          - Admin
                      - type: string
                        enum:
                          - Judger
                  id:
                    type: string
                  newEmail:
                    type: string
                  scopes:
                    type: object
                    additionalProperties:
                      type: string
                  teams:
                    type: object
                    additionalProperties:
                      type: string
                required:
                  - name
                  - username
                  - year
                  - school
                  - country
                  - region
                  - role
                  - id
                  - scopes
                  - teams
              - type: object
                properties:
                  gravatar:
                    type: string
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/users/{userId}/email-verifications/":
    post:
      parameters:
        - type: string
          required: true
          in: path
          name: userId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/users/{userId}/email-verifications/{verificationId}":
    post:
      parameters:
        - type: string
          required: true
          in: path
          name: verificationId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              modified:
                type: boolean
            required:
              - modified
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/users/{userId}/contests/{contestId}/invitations/{invitationId}":
    post:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: userId
        - type: string
          required: true
          in: path
          name: invitationId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/users/{userId}/submissions/":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: userId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              anyOf:
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Compiling
                      required:
                        - status
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Grading
                        gradedCases:
                          type: number
                        testcases:
                          type: array
                          items:
                            type: object
                            properties:
                              points:
                                type: number
                              score:
                                type: number
                              result:
                                anyOf:
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - AC
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - WA
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - SE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - TLE
                                      message:
                                        type: string
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - RE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - MLE
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                            required:
                              - points
                      required:
                        - status
                        - gradedCases
                        - testcases
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Graded
                        score:
                          type: number
                        testcases:
                          type: array
                          items:
                            type: object
                            properties:
                              points:
                                type: number
                              score:
                                type: number
                              result:
                                anyOf:
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - AC
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - WA
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - SE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - TLE
                                      message:
                                        type: string
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - RE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - MLE
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                            required:
                              - points
                              - score
                              - result
                      required:
                        - status
                        - score
                        - testcases
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - CompileFailed
                        log:
                          type: string
                      required:
                        - status
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Terminated
                        log:
                          type: string
                      required:
                        - status
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/users/{userId}/submissions/{submissionId}":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: userId
        - type: string
          required: true
          in: path
          name: submissionId
      responses:
        "200":
          description: Default Response
          schema:
            anyOf:
              - type: object
                allOf:
                  - type: object
                    properties:
                      language:
                        anyOf:
                          - type: string
                            enum:
                              - C
                          - type: string
                            enum:
                              - C++
                          - type: string
                            enum:
                              - Python
                      source:
                        type: string
                      id:
                        type: string
                      problemId:
                        type: string
                      domainId:
                        type: string
                      contestId:
                        type: string
                      teamId:
                        type: string
                      userId:
                        type: string
                      createdAt:
                        type: number
                    required:
                      - language
                      - source
                      - id
                      - problemId
                      - domainId
                      - userId
                      - createdAt
                  - type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - Compiling
                    required:
                      - status
              - type: object
                allOf:
                  - type: object
                    properties:
                      language:
                        anyOf:
                          - type: string
                            enum:
                              - C
                          - type: string
                            enum:
                              - C++
                          - type: string
                            enum:
                              - Python
                      source:
                        type: string
                      id:
                        type: string
                      problemId:
                        type: string
                      domainId:
                        type: string
                      contestId:
                        type: string
                      teamId:
                        type: string
                      userId:
                        type: string
                      createdAt:
                        type: number
                    required:
                      - language
                      - source
                      - id
                      - problemId
                      - domainId
                      - userId
                      - createdAt
                  - type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - Grading
                      gradedCases:
                        type: number
                      testcases:
                        type: array
                        items:
                          type: object
                          properties:
                            points:
                              type: number
                            score:
                              type: number
                            result:
                              anyOf:
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - AC
                                    message:
                                      type: string
                                    memory:
                                      type: number
                                    time:
                                      type: number
                                    wallTime:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - memory
                                    - time
                                    - wallTime
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - WA
                                    message:
                                      type: string
                                    memory:
                                      type: number
                                    time:
                                      type: number
                                    wallTime:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - memory
                                    - time
                                    - wallTime
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - SE
                                    message:
                                      type: string
                                  required:
                                    - status
                                    - message
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - TLE
                                    message:
                                      type: string
                                    time:
                                      type: number
                                    wallTime:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - time
                                    - wallTime
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - RE
                                    message:
                                      type: string
                                  required:
                                    - status
                                    - message
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - MLE
                                    message:
                                      type: string
                                    memory:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - memory
                          required:
                            - points
                    required:
                      - status
                      - gradedCases
                      - testcases
              - type: object
                allOf:
                  - type: object
                    properties:
                      language:
                        anyOf:
                          - type: string
                            enum:
                              - C
                          - type: string
                            enum:
                              - C++
                          - type: string
                            enum:
                              - Python
                      source:
                        type: string
                      id:
                        type: string
                      problemId:
                        type: string
                      domainId:
                        type: string
                      contestId:
                        type: string
                      teamId:
                        type: string
                      userId:
                        type: string
                      createdAt:
                        type: number
                    required:
                      - language
                      - source
                      - id
                      - problemId
                      - domainId
                      - userId
                      - createdAt
                  - type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - Graded
                      score:
                        type: number
                      testcases:
                        type: array
                        items:
                          type: object
                          properties:
                            points:
                              type: number
                            score:
                              type: number
                            result:
                              anyOf:
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - AC
                                    message:
                                      type: string
                                    memory:
                                      type: number
                                    time:
                                      type: number
                                    wallTime:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - memory
                                    - time
                                    - wallTime
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - WA
                                    message:
                                      type: string
                                    memory:
                                      type: number
                                    time:
                                      type: number
                                    wallTime:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - memory
                                    - time
                                    - wallTime
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - SE
                                    message:
                                      type: string
                                  required:
                                    - status
                                    - message
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - TLE
                                    message:
                                      type: string
                                    time:
                                      type: number
                                    wallTime:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - time
                                    - wallTime
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - RE
                                    message:
                                      type: string
                                  required:
                                    - status
                                    - message
                                - type: object
                                  properties:
                                    status:
                                      type: string
                                      enum:
                                        - MLE
                                    message:
                                      type: string
                                    memory:
                                      type: number
                                  required:
                                    - status
                                    - message
                                    - memory
                          required:
                            - points
                            - score
                            - result
                    required:
                      - status
                      - score
                      - testcases
              - type: object
                allOf:
                  - type: object
                    properties:
                      language:
                        anyOf:
                          - type: string
                            enum:
                              - C
                          - type: string
                            enum:
                              - C++
                          - type: string
                            enum:
                              - Python
                      source:
                        type: string
                      id:
                        type: string
                      problemId:
                        type: string
                      domainId:
                        type: string
                      contestId:
                        type: string
                      teamId:
                        type: string
                      userId:
                        type: string
                      createdAt:
                        type: number
                    required:
                      - language
                      - source
                      - id
                      - problemId
                      - domainId
                      - userId
                      - createdAt
                  - type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - CompileFailed
                      log:
                        type: string
                    required:
                      - status
              - type: object
                allOf:
                  - type: object
                    properties:
                      language:
                        anyOf:
                          - type: string
                            enum:
                              - C
                          - type: string
                            enum:
                              - C++
                          - type: string
                            enum:
                              - Python
                      source:
                        type: string
                      id:
                        type: string
                      problemId:
                        type: string
                      domainId:
                        type: string
                      contestId:
                        type: string
                      teamId:
                        type: string
                      userId:
                        type: string
                      createdAt:
                        type: number
                    required:
                      - language
                      - source
                      - id
                      - problemId
                      - domainId
                      - userId
                      - createdAt
                  - type: object
                    properties:
                      status:
                        type: string
                        enum:
                          - Terminated
                      log:
                        type: string
                    required:
                      - status
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  /v1/domains/:
    post:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                type: string
              description:
                type: string
            required:
              - name
              - description
      responses:
        "201":
          description: Default Response
          schema:
            type: object
            properties:
              domainId:
                type: string
            required:
              - domainId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              id:
                type: string
              members:
                type: array
                items:
                  type: string
            required:
              - name
              - description
              - members
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    put:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                type: string
              description:
                type: string
            required:
              - name
              - description
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              modified:
                type: boolean
            required:
              - modified
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/members/":
    post:
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              userId:
                type: string
              scopes:
                type: array
                items:
                  type: string
            required:
              - userId
              - scopes
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              allOf:
                - type: object
                  properties:
                    name:
                      type: string
                    username:
                      type: string
                    id:
                      type: string
                  required:
                    - name
                    - username
                    - id
                - type: object
                  properties:
                    gravatar:
                      type: string
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/members/{userId}":
    delete:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
        - type: string
          required: true
          in: path
          name: userId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    put:
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              scopes:
                type: array
                items:
                  type: string
            required:
              - scopes
        - type: string
          required: true
          in: path
          name: domainId
        - type: string
          required: true
          in: path
          name: userId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              modified:
                type: boolean
            required:
              - modified
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/problems/":
    post:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                type: string
              context:
                type: string
              inputFormat:
                type: string
              outputFormat:
                type: string
              constraints:
                additionalProperties: false
                type: object
                properties:
                  memory:
                    type: number
                  time:
                    type: number
                  wallTime:
                    type: number
                  totalStorage:
                    type: number
                  processes:
                    type: number
              samples:
                type: array
                items:
                  type: object
                  properties:
                    input:
                      type: string
                    output:
                      type: string
                  required:
                    - input
                    - output
              testcases:
                type: array
                items:
                  type: object
                  properties:
                    input:
                      type: object
                      properties:
                        name:
                          type: string
                        versionId:
                          type: string
                      required:
                        - name
                        - versionId
                    output:
                      type: object
                      properties:
                        name:
                          type: string
                        versionId:
                          type: string
                      required:
                        - name
                        - versionId
                    points:
                      type: number
                  required:
                    - input
                    - output
                    - points
            required:
              - name
              - context
              - inputFormat
              - outputFormat
              - constraints
              - samples
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "201":
          description: Default Response
          schema:
            type: object
            properties:
              problemId:
                type: string
            required:
              - problemId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                context:
                  type: string
                inputFormat:
                  type: string
                outputFormat:
                  type: string
                constraints:
                  additionalProperties: false
                  type: object
                  properties:
                    memory:
                      type: number
                    time:
                      type: number
                    wallTime:
                      type: number
                    totalStorage:
                      type: number
                    processes:
                      type: number
                samples:
                  type: array
                  items:
                    type: object
                    properties:
                      input:
                        type: string
                      output:
                        type: string
                    required:
                      - input
                      - output
                testcases:
                  type: array
                  items:
                    type: object
                    properties:
                      input:
                        type: object
                        properties:
                          name:
                            type: string
                          versionId:
                            type: string
                        required:
                          - name
                          - versionId
                      output:
                        type: object
                        properties:
                          name:
                            type: string
                          versionId:
                            type: string
                        required:
                          - name
                          - versionId
                      points:
                        type: number
                    required:
                      - input
                      - output
                      - points
                id:
                  type: string
                domainId:
                  type: string
              required:
                - name
                - context
                - inputFormat
                - outputFormat
                - constraints
                - samples
                - id
                - domainId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/problems/{problemId}":
    put:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                type: string
              context:
                type: string
              inputFormat:
                type: string
              outputFormat:
                type: string
              constraints:
                additionalProperties: false
                type: object
                properties:
                  memory:
                    type: number
                  time:
                    type: number
                  wallTime:
                    type: number
                  totalStorage:
                    type: number
                  processes:
                    type: number
              samples:
                type: array
                items:
                  type: object
                  properties:
                    input:
                      type: string
                    output:
                      type: string
                  required:
                    - input
                    - output
              testcases:
                type: array
                items:
                  type: object
                  properties:
                    input:
                      type: object
                      properties:
                        name:
                          type: string
                        versionId:
                          type: string
                      required:
                        - name
                        - versionId
                    output:
                      type: object
                      properties:
                        name:
                          type: string
                        versionId:
                          type: string
                      required:
                        - name
                        - versionId
                    points:
                      type: number
                  required:
                    - input
                    - output
                    - points
            required:
              - name
              - context
              - inputFormat
              - outputFormat
              - constraints
              - samples
        - type: string
          required: true
          in: path
          name: domainId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              modified:
                type: boolean
            required:
              - modified
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    delete:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              name:
                type: string
              context:
                type: string
              inputFormat:
                type: string
              outputFormat:
                type: string
              constraints:
                additionalProperties: false
                type: object
                properties:
                  memory:
                    type: number
                  time:
                    type: number
                  wallTime:
                    type: number
                  totalStorage:
                    type: number
                  processes:
                    type: number
              samples:
                type: array
                items:
                  type: object
                  properties:
                    input:
                      type: string
                    output:
                      type: string
                  required:
                    - input
                    - output
              testcases:
                type: array
                items:
                  type: object
                  properties:
                    input:
                      type: object
                      properties:
                        name:
                          type: string
                        versionId:
                          type: string
                      required:
                        - name
                        - versionId
                    output:
                      type: object
                      properties:
                        name:
                          type: string
                        versionId:
                          type: string
                      required:
                        - name
                        - versionId
                    points:
                      type: number
                  required:
                    - input
                    - output
                    - points
              id:
                type: string
              domainId:
                type: string
            required:
              - name
              - context
              - inputFormat
              - outputFormat
              - constraints
              - samples
              - id
              - domainId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/problems/{problemId}/submissions":
    post:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              language:
                anyOf:
                  - type: string
                    enum:
                      - C
                  - type: string
                    enum:
                      - C++
                  - type: string
                    enum:
                      - Python
              source:
                type: string
            required:
              - language
              - source
        - type: string
          required: true
          in: path
          name: domainId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "202":
          description: Default Response
          schema:
            type: object
            properties:
              submissionId:
                type: string
            required:
              - submissionId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "405":
          description: Error returned when the requested method resource is not available.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested method resource is not available.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 405
                example: 405
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Method Not Allowed
                example: Method Not Allowed
              message:
                type: string
                description: The error message
                pattern: .+
                example: Method Not Allowed.
              code:
                type: string
                description: The error code
                enum:
                  - Method Not Allowed
                example: Method Not Allowed
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/problems/{problemId}/upload-session":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              uploadId:
                type: string
            required:
              - uploadId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/contests/":
    post:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              startTime:
                type: number
              endTime:
                type: number
              teamSize:
                type: number
              handle:
                type: string
              seriesId:
                type: string
            required:
              - name
              - description
              - startTime
              - endTime
              - teamSize
              - handle
              - seriesId
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "201":
          description: Default Response
          schema:
            type: object
            properties:
              contestId:
                type: string
            required:
              - contestId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startTime:
                  type: number
                endTime:
                  type: number
                teamSize:
                  type: number
                handle:
                  type: string
                seriesId:
                  type: string
                domainId:
                  type: string
                id:
                  type: string
                published:
                  type: boolean
              required:
                - name
                - description
                - startTime
                - endTime
                - teamSize
                - handle
                - seriesId
                - domainId
                - id
                - published
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/domains/{domainId}/contest-series/":
    post:
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
            required:
              - name
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "201":
          description: Default Response
          schema:
            type: object
            properties:
              seriesId:
                type: string
            required:
              - seriesId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: domainId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startTime:
                  type: number
                endTime:
                  type: number
                teamSize:
                  type: number
                handle:
                  type: string
                seriesId:
                  type: string
                domainId:
                  type: string
                id:
                  type: string
                published:
                  type: boolean
              required:
                - name
                - description
                - startTime
                - endTime
                - teamSize
                - handle
                - seriesId
                - domainId
                - id
                - published
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  /v1/judger/language-config:
    get:
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              C:
                type: object
                properties:
                  srcFile:
                    type: string
                  binaryFile:
                    type: string
                  displayName:
                    type: string
                  compileCommand:
                    type: string
                  executeCommand:
                    type: string
                  constraints:
                    additionalProperties: false
                    type: object
                    properties:
                      memory:
                        type: number
                      time:
                        type: number
                      wallTime:
                        type: number
                      totalStorage:
                        type: number
                      processes:
                        type: number
                required:
                  - srcFile
                  - binaryFile
                  - displayName
                  - compileCommand
                  - executeCommand
                  - constraints
              C++:
                type: object
                properties:
                  srcFile:
                    type: string
                  binaryFile:
                    type: string
                  displayName:
                    type: string
                  compileCommand:
                    type: string
                  executeCommand:
                    type: string
                  constraints:
                    additionalProperties: false
                    type: object
                    properties:
                      memory:
                        type: number
                      time:
                        type: number
                      wallTime:
                        type: number
                      totalStorage:
                        type: number
                      processes:
                        type: number
                required:
                  - srcFile
                  - binaryFile
                  - displayName
                  - compileCommand
                  - executeCommand
                  - constraints
              Python:
                type: object
                properties:
                  srcFile:
                    type: string
                  binaryFile:
                    type: string
                  displayName:
                    type: string
                  compileCommand:
                    type: string
                  executeCommand:
                    type: string
                  constraints:
                    additionalProperties: false
                    type: object
                    properties:
                      memory:
                        type: number
                      time:
                        type: number
                      wallTime:
                        type: number
                      totalStorage:
                        type: number
                      processes:
                        type: number
                required:
                  - srcFile
                  - binaryFile
                  - displayName
                  - compileCommand
                  - executeCommand
                  - constraints
            required:
              - C
              - C++
              - Python
  "/v1/contests/{contestId}":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              startTime:
                type: number
              endTime:
                type: number
              teamSize:
                type: number
              handle:
                type: string
              seriesId:
                type: string
              domainId:
                type: string
              id:
                type: string
              published:
                type: boolean
            required:
              - name
              - description
              - startTime
              - endTime
              - teamSize
              - handle
              - seriesId
              - domainId
              - id
              - published
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    put:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              startTime:
                type: number
              endTime:
                type: number
              teamSize:
                type: number
              handle:
                type: string
            required:
              - name
              - description
              - startTime
              - endTime
              - teamSize
              - handle
        - type: string
          required: true
          in: path
          name: contestId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/publish":
    post:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
      responses:
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/problems/":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              id:
                type: string
              problems:
                type: array
                items:
                  type: object
                  allOf:
                    - type: object
                      properties:
                        name:
                          type: string
                        id:
                          type: string
                      required:
                        - name
                        - id
                    - type: object
                      properties: {}
            required:
              - id
              - problems
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/problems/{problemId}":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            allOf:
              - type: object
                properties:
                  name:
                    type: string
                  context:
                    type: string
                  inputFormat:
                    type: string
                  outputFormat:
                    type: string
                  constraints:
                    additionalProperties: false
                    type: object
                    properties:
                      memory:
                        type: number
                      time:
                        type: number
                      wallTime:
                        type: number
                      totalStorage:
                        type: number
                      processes:
                        type: number
                  samples:
                    type: array
                    items:
                      type: object
                      properties:
                        input:
                          type: string
                        output:
                          type: string
                      required:
                        - input
                        - output
                  testcases:
                    type: array
                    items:
                      type: object
                      properties:
                        input:
                          type: object
                          properties:
                            name:
                              type: string
                            versionId:
                              type: string
                          required:
                            - name
                            - versionId
                        output:
                          type: object
                          properties:
                            name:
                              type: string
                            versionId:
                              type: string
                          required:
                            - name
                            - versionId
                        points:
                          type: number
                      required:
                        - input
                        - output
                        - points
                  id:
                    type: string
                  domainId:
                    type: string
                required:
                  - name
                  - context
                  - inputFormat
                  - outputFormat
                  - constraints
                  - samples
                  - id
                  - domainId
              - type: object
                properties:
                  contestId:
                    type: string
                  obsolete:
                    type: boolean
                required:
                  - contestId
                  - obsolete
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    put:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              modified:
                type: boolean
            required:
              - modified
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    delete:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/problems/{problemId}/submissions":
    post:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              language:
                anyOf:
                  - type: string
                    enum:
                      - C
                  - type: string
                    enum:
                      - C++
                  - type: string
                    enum:
                      - Python
              source:
                type: string
            required:
              - language
              - source
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "202":
          description: Default Response
          schema:
            type: object
            properties:
              submissionId:
                type: string
            required:
              - submissionId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: problemId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              anyOf:
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Compiling
                      required:
                        - status
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Grading
                        gradedCases:
                          type: number
                        testcases:
                          type: array
                          items:
                            type: object
                            properties:
                              points:
                                type: number
                              score:
                                type: number
                              result:
                                anyOf:
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - AC
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - WA
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - SE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - TLE
                                      message:
                                        type: string
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - RE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - MLE
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                            required:
                              - points
                      required:
                        - status
                        - gradedCases
                        - testcases
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Graded
                        score:
                          type: number
                        testcases:
                          type: array
                          items:
                            type: object
                            properties:
                              points:
                                type: number
                              score:
                                type: number
                              result:
                                anyOf:
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - AC
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - WA
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - SE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - TLE
                                      message:
                                        type: string
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - RE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - MLE
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                            required:
                              - points
                              - score
                              - result
                      required:
                        - status
                        - score
                        - testcases
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - CompileFailed
                        log:
                          type: string
                      required:
                        - status
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Terminated
                        log:
                          type: string
                      required:
                        - status
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/teams/":
    post:
      parameters:
        - name: body
          in: body
          schema:
            additionalProperties: false
            type: object
            properties:
              name:
                type: string
            required:
              - name
        - type: string
          required: true
          in: path
          name: contestId
      responses:
        "201":
          description: Default Response
          schema:
            type: object
            properties:
              teamId:
                type: string
            required:
              - teamId
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "409":
          description: Error returned when the requested resource already exists.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource already exists.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 409
                example: 409
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Conflict
                example: Conflict
              message:
                type: string
                description: The error message
                pattern: .+
                example: Conflict.
              code:
                type: string
                description: The error code
                enum:
                  - Conflict
                example: Conflict
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/teams/{teamId}":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              name:
                type: string
              id:
                type: string
              contestId:
                type: string
              captain:
                type: string
              members:
                type: array
                items:
                  type: string
            required:
              - name
              - id
              - contestId
              - captain
              - members
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    delete:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
      responses:
        "200":
          description: Default Response
  "/v1/contests/{contestId}/teams/{teamId}/invitations":
    post:
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              userId:
                type: string
            required:
              - userId
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                teamId:
                  type: string
                userId:
                  type: string
                contestId:
                  type: string
                createdAt:
                  type: number
              required:
                - id
                - teamId
                - userId
                - contestId
                - createdAt
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/teams/{teamId}/invitations/{invitationId}":
    delete:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
        - type: string
          required: true
          in: path
          name: invitationId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
    post:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
        - type: string
          required: true
          in: path
          name: invitationId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/teams/{teamId}/members":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              allOf:
                - type: object
                  properties:
                    name:
                      type: string
                    username:
                      type: string
                    id:
                      type: string
                  required:
                    - name
                    - username
                    - id
                - type: object
                  properties:
                    gravatar:
                      type: string
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/teams/{teamId}/members/{userId}":
    delete:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
        - type: string
          required: true
          in: path
          name: userId
      responses:
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "405":
          description: Error returned when the requested method resource is not available.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested method resource is not available.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 405
                example: 405
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Method Not Allowed
                example: Method Not Allowed
              message:
                type: string
                description: The error message
                pattern: .+
                example: Method Not Allowed.
              code:
                type: string
                description: The error code
                enum:
                  - Method Not Allowed
                example: Method Not Allowed
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/teams/{teamId}/captain":
    put:
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              userId:
                type: string
            required:
              - userId
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
      responses:
        "200":
          description: Default Response
          schema:
            type: object
            properties:
              modified:
                type: boolean
            required:
              - modified
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "404":
          description: Error returned when the requested resource is not found.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the requested resource is not found.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 404
                example: 404
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Not Found
                example: Not Found
              message:
                type: string
                description: The error message
                pattern: .+
                example: Not Found.
              code:
                type: string
                description: The error code
                enum:
                  - Not Found
                example: Not Found
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/teams/{teamId}/submissions":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
        - type: string
          required: true
          in: path
          name: teamId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              anyOf:
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Compiling
                      required:
                        - status
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Grading
                        gradedCases:
                          type: number
                        testcases:
                          type: array
                          items:
                            type: object
                            properties:
                              points:
                                type: number
                              score:
                                type: number
                              result:
                                anyOf:
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - AC
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - WA
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - SE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - TLE
                                      message:
                                        type: string
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - RE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - MLE
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                            required:
                              - points
                      required:
                        - status
                        - gradedCases
                        - testcases
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Graded
                        score:
                          type: number
                        testcases:
                          type: array
                          items:
                            type: object
                            properties:
                              points:
                                type: number
                              score:
                                type: number
                              result:
                                anyOf:
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - AC
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - WA
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - SE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - TLE
                                      message:
                                        type: string
                                      time:
                                        type: number
                                      wallTime:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - time
                                      - wallTime
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - RE
                                      message:
                                        type: string
                                    required:
                                      - status
                                      - message
                                  - type: object
                                    properties:
                                      status:
                                        type: string
                                        enum:
                                          - MLE
                                      message:
                                        type: string
                                      memory:
                                        type: number
                                    required:
                                      - status
                                      - message
                                      - memory
                            required:
                              - points
                              - score
                              - result
                      required:
                        - status
                        - score
                        - testcases
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - CompileFailed
                        log:
                          type: string
                      required:
                        - status
                - type: object
                  allOf:
                    - type: object
                      properties:
                        language:
                          anyOf:
                            - type: string
                              enum:
                                - C
                            - type: string
                              enum:
                                - C++
                            - type: string
                              enum:
                                - Python
                        source:
                          type: string
                        id:
                          type: string
                        problemId:
                          type: string
                        domainId:
                          type: string
                        contestId:
                          type: string
                        teamId:
                          type: string
                        userId:
                          type: string
                        createdAt:
                          type: number
                      required:
                        - language
                        - source
                        - id
                        - problemId
                        - domainId
                        - userId
                        - createdAt
                    - type: object
                      properties:
                        status:
                          type: string
                          enum:
                            - Terminated
                        log:
                          type: string
                      required:
                        - status
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "401":
          description: Error returned when client does not provide any valid authorization.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client does not provide any valid
              authorization.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 401
                example: 401
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Unauthorized
                example: Unauthorized
              message:
                type: string
                description: The error message
                pattern: .+
                example: Unauthorized.
              code:
                type: string
                description: The error code
                enum:
                  - Unauthorized
                example: Unauthorized
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  "/v1/contests/{contestId}/ranklist/":
    get:
      parameters:
        - type: string
          required: true
          in: path
          name: contestId
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                contestId:
                  type: string
                scores:
                  type: object
                  additionalProperties:
                    type: string
                time:
                  type: object
                  additionalProperties:
                    type: string
                totalScore:
                  type: number
                lastTime:
                  type: number
              required:
                - id
                - contestId
                - scores
                - time
                - totalScore
                - lastTime
        "400":
          description: Error returned when the client payload is either invalid, malformed
            or has logical validation errors.
          schema:
            type: object
            $id: todo.com
            description: Error returned when the client payload is either invalid, malformed
              or has logical validation errors.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 400
                example: 400
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Bad Request
                example: Bad Request
              message:
                type: string
                description: The error message
                pattern: .+
                example: Bad Request.
              code:
                type: string
                description: The error code
                enum:
                  - Bad Request
                example: Bad Request
              errors:
                type: array
                items:
                  type: object
                  description: A client error detected by the server.
                  additionalProperties: true
              failedValidations:
                type: object
                description: The validation errors in the client payload.
                additionalProperties: true
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
        "403":
          description: Error returned when client is not authorized to access the
            requested resource.
          schema:
            type: object
            $id: todo.com
            description: Error returned when client is not authorized to access the
              requested resource.
            properties:
              statusCode:
                type: number
                description: The error HTTP status code
                enum:
                  - 403
                example: 403
              error:
                type: string
                description: The error HTTP status description
                enum:
                  - Forbidden
                example: Forbidden
              message:
                type: string
                description: The error message
                pattern: .+
                example: Forbidden.
              code:
                type: string
                description: The error code
                enum:
                  - Forbidden
                example: Forbidden
            required:
              - statusCode
              - error
              - message
            additionalProperties: false
  /v1/contest-series/:
    get:
      responses:
        "200":
          description: Default Response
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                contests:
                  type: array
                  items:
                    type: string
                id:
                  type: string
                domainId:
                  type: string
              required:
                - name
                - contests
                - id
                - domainId
